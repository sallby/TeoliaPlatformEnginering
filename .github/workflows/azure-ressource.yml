name: Apply resources Azure

on:
  workflow_dispatch:
    inputs:
      localisation:
        description: 'Localisation de la ressource'
        required: true
      nomRessource:
        description: 'Nom de la ressource'
        required: true

jobs:
  terraform:
    runs-on: ubuntu-latest

    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      
    steps:
      - name: Checkout Github Repo
        uses: actions/checkout@v4
        
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Check Resource Existence
        id: check_rg_existence
        run: |
          exists=$(az group exists --name "${{ github.event.inputs.nomRessource }}")
          echo ::set-output name=exists::$exists

      - name: Determine Count
        id: determine_count
        run: |
          if [[ ${{ steps.check_rg_existence.outputs.exists }} == 'false' ]]; then
            echo "::set-output name=count::1"
          else
            echo "::set-output name=count::0"
          fi

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Validate
        working-directory: ./terraform
        run: terraform validate

      - name: Terraform Plan
        working-directory: ./terraform
        run: |
          terraform plan -out=tfplan \
            -var="localisation=${{ github.event.inputs.localisation }}" \
            -var="nomRessource=${{ github.event.inputs.nomRessource }}" \
            -var="count=${{ steps.determine_count.outputs.count }}"

      - name: Deploy if approved
        if: steps.check_rg_existence.outputs.exists == 'false'
        working-directory: ./terraform
        run: terraform apply -auto-approve tfplan